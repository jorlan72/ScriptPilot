unit addtask;

interface

uses Classes, DateUtils, VCL.FlexCel.Core, FlexCel.XlsAdapter;

procedure CreateAndSaveTaskFile;
procedure CreateExcelFile(const xls: TExcelFile);

implementation

uses Main;

procedure CreateAndSaveTaskFile;
var
  xls: TXlsFile;
begin
  xls := TXlsFile.Create(true);
  try
    CreateExcelFile(xls);
    //Save the file as XLS
    xls.Save(taskfilename);
  finally
    xls.Free;
  end
end;

procedure CreateExcelFile(const xls: TExcelFile);
var
  StyleFmt: TFlxFormat;
  MajorLatin: TThemeTextFont;
  MajorEastAsian: TThemeTextFont;
  MajorComplexScript: TThemeTextFont;
  MajorFont: TThemeFont;
  MinorLatin: TThemeTextFont;
  MinorEastAsian: TThemeTextFont;
  MinorComplexScript: TThemeTextFont;
  MinorFont: TThemeFont;
  fmt: TFlxFormat;
  Ranges: TArray<TXlsCellRange>;
  Rules: TArray<IConditionalFormatRule>;
  BeginsWithRule: IConditionalBeginsWithTextRule;
  CFDef: TConditionalFormatDefStandard;
  ContainsTextRule: IConditionalContainsTextRule;
  CellIsRule: IConditionalCellIsRule;

begin
  xls.NewFile(5, TExcelFileFormat.v2021);

  xls.ActiveSheet := 1;
  xls.SheetName := 'Information';
  xls.ActiveSheet := 2;
  xls.SheetName := 'Settings';
  xls.ActiveSheet := 3;
  xls.SheetName := 'Script';
  xls.ActiveSheet := 4;
  xls.SheetName := 'Trim';
  xls.ActiveSheet := 5;
  xls.SheetName := 'Help';

  xls.ActiveSheet := 1;

  xls.OptionsCheckCompatibility := false;

  xls.SheetName := 'Information';

  StyleFmt := xls.GetStyle(xls.GetBuiltInStyleName(TBuiltInStyle.Hyperlink, 0));
  StyleFmt.VAlignment := TVFlxAlignment.bottom;
  StyleFmt.Locked := true;
  xls.SetStyle(xls.GetBuiltInStyleName(TBuiltInStyle.Hyperlink, 0), StyleFmt);

  xls.SetColorTheme(TPrimaryThemeColor.Accent1, TDrawingColor.FromRgb($5B, $9B, $D5));
  xls.SetColorTheme(TPrimaryThemeColor.Accent5, TDrawingColor.FromRgb($44, $72, $C4));


  MajorLatin := TThemeTextFont.Create('Calibri Light', '020F0302020204030204', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MajorEastAsian := TThemeTextFont.Create('', '', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MajorComplexScript := TThemeTextFont.Create('', '', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MajorFont := TThemeFont.Create(MajorLatin, MajorEastAsian, MajorComplexScript);
  xls.SetThemeFont(TFontScheme.Major, MajorFont);


  MinorLatin := TThemeTextFont.Create('Calibri', '020F0502020204030204', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MinorEastAsian := TThemeTextFont.Create('', '', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MinorComplexScript := TThemeTextFont.Create('', '', TPitchFamily.DEFAULT_PITCH__UNKNOWN_FONT_FAMILY, TDrawingFontCharSet.Default);
  MinorFont := TThemeFont.Create(MinorLatin, MinorEastAsian, MinorComplexScript);
  xls.SetThemeFont(TFontScheme.Minor, MinorFont);

  xls.SetColWidth(1, 8, 5997);

  xls.SetColWidth(9, 12, 4864);
  xls.DefaultRowHeight := 300;

  xls.SetRowHeight(1, 900);
  xls.SetRowHeight(6, 315);
  xls.SetRowHeight(10, 375);
  xls.SetRowHeight(11, 375);
  xls.SetRowHeight(12, 375);
  xls.SetRowHeight(13, 375);
  xls.SetRowHeight(14, 375);
  xls.SetRowHeight(15, 375);

  xls.MergeCells(1, 1, 1, 5);
  xls.MergeCells(1, 6, 1, 8);

  fmt := xls.GetCellVisibleFormatDef(1, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
  xls.SetCellValue(1, 1, 'Information about a task');

  fmt := xls.GetCellVisibleFormatDef(1, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 6);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 6, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 7);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 7, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 8);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 8, xls.AddFormat(fmt));
  xls.SetCellValue(3, 1, 'This current task is generated from a template, and contains sample data you can'
  + ' change as needed.');
  xls.SetCellValue(4, 1, 'You can also copy this file to create new task or you can choose to generate tasks'
  + ' from within the application "Create" menu.');

  fmt := xls.GetCellVisibleFormatDef(6, 1);
  fmt.Font.Size20 := 280;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  xls.SetCellFormat(6, 1, xls.AddFormat(fmt));
  xls.SetCellValue(6, 1, 'Every Task file MUST contain the two case sensitive named sheets "Settings" and "Script".'
  + ' All other sheets are optional.');
  xls.SetCellValue(7, 1, 'You can create as many sheets in this Excel Workbook as you please, and you can edit'
  + ' and format everything to your liking.');

  fmt := xls.GetCellVisibleFormatDef(10, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 1, xls.AddFormat(fmt));
  xls.SetCellValue(10, 1, 'Excel Sheet');

  fmt := xls.GetCellVisibleFormatDef(10, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 2, xls.AddFormat(fmt));
  xls.SetCellValue(10, 2, 'Description');

  fmt := xls.GetCellVisibleFormatDef(10, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 6);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 6, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 7);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 7, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 8);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(10, 8, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(11, 1, xls.AddFormat(fmt));
  xls.SetCellValue(11, 1, 'Information');
  xls.SetCellValue(11, 2, 'The sheet you are looking at now');

  fmt := xls.GetCellVisibleFormatDef(12, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(12, 1, xls.AddFormat(fmt));
  xls.SetCellValue(12, 1, 'Settings');
  xls.SetCellValue(12, 2, 'This sheet contains settings for the current task, including task description, timouts'
  + ' and an variable input table');

  fmt := xls.GetCellVisibleFormatDef(13, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(13, 1, xls.AddFormat(fmt));
  xls.SetCellValue(13, 1, 'Script');
  xls.SetCellValue(13, 2, 'This is were the script lives and that the application will run through (when the'
  + ' RUN button is clicked), row by row');

  fmt := xls.GetCellVisibleFormatDef(14, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(14, 1, xls.AddFormat(fmt));
  xls.SetCellValue(14, 1, 'Trim');
  xls.SetCellValue(14, 2, 'Optional sheet used by commands "TrimOn" and "TrimOff" for removing unwanted lines'
  + ' or words / symbols from SSH and Telnet outrput');

  fmt := xls.GetCellVisibleFormatDef(15, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(15, 1, xls.AddFormat(fmt));
  xls.SetCellValue(15, 1, 'Help');
  xls.SetCellValue(15, 2, 'An index of all commands available for scripting');
  xls.SetCellValue(17, 1, 'All sheets, except "Settings" and "Script" can be deleted');
  xls.SetCellValue(20, 1, 'Sheets will also be added as needed while the script develops.');
  xls.SetCellValue(21, 1, 'You can use extra sheets for generating Notepad output or sending entire sheets of'
  + ' commands to SSH, Telnet, PowerShell etc.');
  xls.SetCellValue(22, 1, 'These sheets will also be string replaced, during execution, with the variables contained'
  + ' within the task and the "Data" sheet from the Data.xlsx file.');
  xls.SetCellValue(23, 1, 'This makes it easy to create templates for firewalls and switches that have settings'
  + ' that change from site to site (for example IP addresses).');
  xls.SetCellValue(25, 1, 'Please see the documentation for more information.');

  xls.SelectCell(1, 1, false);


  xls.ActiveSheet := 2;

  xls.SheetName := 'Settings';

  xls.SetColWidth(1, 1, 39789);

  xls.SetColWidth(2, 2, 14299);

  xls.SetColWidth(3, 3, 9106);

  xls.SetRowHeight(1, 840);
  xls.SetRowHeight(3, 375);
  xls.SetRowHeight(6, 375);
  xls.SetRowHeight(7, 375);
  xls.SetRowHeight(8, 375);
  xls.SetRowHeight(19, 375);

  xls.MergeCells(1, 1, 1, 3);

  fmt := xls.GetCellVisibleFormatDef(1, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
  xls.SetCellValue(1, 1, 'Task Settings');

  fmt := xls.GetCellVisibleFormatDef(1, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(2, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(2, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(2, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(2, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(2, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(2, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(3, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(3, 1, xls.AddFormat(fmt));
  xls.SetCellValue(3, 1, 'Text in cell B3 will be shown in the application when this task is selected. Describe'
  + ' the task.');

  fmt := xls.GetCellVisibleFormatDef(3, 2);
  fmt.Borders.Left.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(3, 2, xls.AddFormat(fmt));
  xls.SetCellValue(3, 2, 'This is a blank task. Press F4 to edit it in Excel.');

  fmt := xls.GetCellVisibleFormatDef(3, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(3, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(4, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(4, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(4, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(4, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(4, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(4, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(5, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(5, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(5, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(5, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(5, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(5, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(6, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(6, 1, xls.AddFormat(fmt));
  xls.SetCellValue(6, 1, 'SSH and Telnet retry interval for WaitForSSH/Telnet/PING Connection in seconds.');

  fmt := xls.GetCellVisibleFormatDef(6, 2);
  fmt.Borders.Left.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(6, 2, xls.AddFormat(fmt));
  xls.SetCellValue(6, 2, 30);

  fmt := xls.GetCellVisibleFormatDef(6, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(6, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(7, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(7, 1, xls.AddFormat(fmt));
  xls.SetCellValue(7, 1, 'Maximum wait time in seconds for the WaitForSSH/Telnet/PING Connection loop.');

  fmt := xls.GetCellVisibleFormatDef(7, 2);
  fmt.Borders.Left.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(7, 2, xls.AddFormat(fmt));
  xls.SetCellValue(7, 2, 3600);

  fmt := xls.GetCellVisibleFormatDef(7, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(7, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(8, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(8, 1, xls.AddFormat(fmt));
  xls.SetCellValue(8, 1, 'Wait time to connect and wait time receiving data from a single SSH/TelnetCommand/Verbose/PING'
  + ' command in seconds.');

  fmt := xls.GetCellVisibleFormatDef(8, 2);
  fmt.Borders.Left.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(8, 2, xls.AddFormat(fmt));
  xls.SetCellValue(8, 2, 5);

  fmt := xls.GetCellVisibleFormatDef(8, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(8, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(9, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(9, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(9, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(9, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(9, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(9, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(10, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(10, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(10, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(11, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(11, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(11, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(12, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(12, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(12, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(13, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(13, 1, xls.AddFormat(fmt));
  xls.SetCellValue(13, 1, 'If the script requires extra input during the execution, specify the description'
  + ' and the belonging variable to place the input into.');

  fmt := xls.GetCellVisibleFormatDef(13, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(13, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(13, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(13, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(14, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(14, 1, xls.AddFormat(fmt));
  xls.SetCellValue(14, 1, 'You can specify as many input fields as you want. It will be read until a blank row'
  + ' is hit. Starting at A20');

  fmt := xls.GetCellVisibleFormatDef(14, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(14, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(14, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(14, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(15, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(15, 1, xls.AddFormat(fmt));
  xls.SetCellValue(15, 1, 'All input can be used in script and content during script execution.');

  fmt := xls.GetCellVisibleFormatDef(15, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(15, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(15, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(15, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(16, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(16, 1, xls.AddFormat(fmt));
  xls.SetCellValue(16, 1, 'User will be presented with these input fields when you use the command "AskForInputTable"');

  fmt := xls.GetCellVisibleFormatDef(16, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(16, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(16, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(16, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(17, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(17, 1, xls.AddFormat(fmt));
  xls.SetCellValue(17, 1, 'If you only need a single input variable or only want to ask for one variable at'
  + ' a time, "AskForInput" is a better alternative.');

  fmt := xls.GetCellVisibleFormatDef(17, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(17, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(17, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(17, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(18, 1);
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(18, 1, xls.AddFormat(fmt));
  xls.SetCellValue(18, 1, 'The "AskForInputTable" is used for gathering a lot of information in one go.');

  fmt := xls.GetCellVisibleFormatDef(18, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(18, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(18, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(18, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(19, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(19, 1, xls.AddFormat(fmt));
  xls.SetCellValue(19, 1, 'Input description');

  fmt := xls.GetCellVisibleFormatDef(19, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(19, 2, xls.AddFormat(fmt));
  xls.SetCellValue(19, 2, 'Variable name');

  fmt := xls.GetCellVisibleFormatDef(19, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(19, 3, xls.AddFormat(fmt));
  xls.SetCellValue(19, 3, 'Initial value');

  fmt := xls.GetCellVisibleFormatDef(20, 1);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(20, 1, xls.AddFormat(fmt));
  xls.SetCellValue(20, 1, 'What is your username?');

  fmt := xls.GetCellVisibleFormatDef(20, 2);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(20, 2, xls.AddFormat(fmt));
  xls.SetCellValue(20, 2, '#username#');

  fmt := xls.GetCellVisibleFormatDef(20, 3);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(20, 3, xls.AddFormat(fmt));
  xls.SetCellValue(20, 3, 'Potus');

  fmt := xls.GetCellVisibleFormatDef(21, 1);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(21, 1, xls.AddFormat(fmt));
  xls.SetCellValue(21, 1, 'What is your password?');

  fmt := xls.GetCellVisibleFormatDef(21, 2);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(21, 2, xls.AddFormat(fmt));
  xls.SetCellValue(21, 2, '#password#');

  fmt := xls.GetCellVisibleFormatDef(21, 3);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(21, 3, xls.AddFormat(fmt));
  xls.SetCellValue(21, 3, 'Lotus');

  fmt := xls.GetCellVisibleFormatDef(22, 1);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(22, 1, xls.AddFormat(fmt));
  xls.SetCellValue(22, 1, 'How old are you?');

  fmt := xls.GetCellVisibleFormatDef(22, 2);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(22, 2, xls.AddFormat(fmt));
  xls.SetCellValue(22, 2, '#age#');

  fmt := xls.GetCellVisibleFormatDef(22, 3);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(22, 3, xls.AddFormat(fmt));
  xls.SetCellValue(22, 3, 67);

  fmt := xls.GetCellVisibleFormatDef(23, 1);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(23, 1, xls.AddFormat(fmt));
  xls.SetCellValue(23, 1, 'What is the question to the answer 42?');

  fmt := xls.GetCellVisibleFormatDef(23, 2);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(23, 2, xls.AddFormat(fmt));
  xls.SetCellValue(23, 2, '#answer42#');

  fmt := xls.GetCellVisibleFormatDef(23, 3);
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Dark2, 0.79992065187536);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(23, 3, xls.AddFormat(fmt));
  xls.SetCellValue(23, 3, 'Life');

  fmt := xls.GetCellVisibleFormatDef(24, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(24, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(24, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(24, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(24, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(24, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(25, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(25, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(25, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(25, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(25, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(25, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(26, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(26, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(26, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(26, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(26, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(26, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(27, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(27, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(27, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(27, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(27, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(27, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(28, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(28, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(28, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(28, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(28, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(28, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(29, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(29, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(29, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(29, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(29, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(29, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(30, 1);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(30, 1, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(30, 2);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(30, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(30, 3);
  fmt.HAlignment := THFlxAlignment.left;
  xls.SetCellFormat(30, 3, xls.AddFormat(fmt));

  xls.SelectCell(1, 1, false);


  xls.ActiveSheet := 3;

  xls.SheetName := 'Script';

  xls.SetColWidth(1, 1, 8923);

  xls.SetColWidth(2, 2, 32256);

  xls.SetColWidth(3, 4, 7204);

  xls.SetColWidth(5, 5, 11227);

  xls.SetRowHeight(1, 645);

  fmt := xls.GetCellVisibleFormatDef(1, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Medium;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
  xls.SetCellValue(1, 1, 'Command');

  fmt := xls.GetCellVisibleFormatDef(1, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Medium;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 2, xls.AddFormat(fmt));
  xls.SetCellValue(1, 2, 'Parameter 1');

  fmt := xls.GetCellVisibleFormatDef(1, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Medium;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 3, xls.AddFormat(fmt));
  xls.SetCellValue(1, 3, 'Parameter 2');

  fmt := xls.GetCellVisibleFormatDef(1, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Medium;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 4, xls.AddFormat(fmt));
  xls.SetCellValue(1, 4, 'Parameter 3');
  xls.SetCellValue(2, 1, 'LogItTime');
  xls.SetCellValue(2, 2, 'Starting the welcome script');
  xls.SetCellValue(2, 3, 0);
  xls.SetCellValue(3, 1, 'Message');
  xls.SetCellValue(3, 2, 'Welcome to ScriptPilot!');
  xls.SetCellValue(4, 1, 'MessageImage');
  xls.SetCellValue(4, 2, 'Have a great day!');
  xls.SetCellValue(4, 4, 'Click to continue');

  Ranges := TArray<TXlsCellRange>.Create(
    TXlsCellRange.Create(1, 1, 1, 16384),
    TXlsCellRange.Create(18, 1, 1048576, 16384),
    TXlsCellRange.Create(2, 5, 17, 16384),
    TXlsCellRange.Create(5, 1, 17, 4)
  );

  Rules := nil;
  SetLength(Rules, 3);
  BeginsWithRule := TConditionalBeginsWithTextRule_Create(5, false, 'variable');
  CFDef := BeginsWithRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.39988402966399);
  Rules[0] := BeginsWithRule;

  BeginsWithRule := TConditionalBeginsWithTextRule_Create(7, false, 'goto');
  CFDef := BeginsWithRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromArgb($92, $D0, $50);
  Rules[1] := BeginsWithRule;

  ContainsTextRule := TConditionalContainsTextRule_Create(8, false, '#label#');
  CFDef := ContainsTextRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.ApplyFont.Strikeout := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyNumericFormat := true;
  CFDef.NumericFormat := '@';
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromArgb($FF, $00, $00);
  Rules[2] := ContainsTextRule;

  xls.AddConditionalFormat(TConditionalFormat.Create(Ranges, Rules, false));

  Ranges := TArray<TXlsCellRange>.Create(
    TXlsCellRange.Create(1, 1, 1, 16384),
    TXlsCellRange.Create(5, 1, 1048576, 16384),
    TXlsCellRange.Create(2, 5, 4, 16384)
  );

  Rules := nil;
  SetLength(Rules, 1);
  CellIsRule := TConditionalCellIsRule_Create(6, false, TConditionType.GreaterOrEqual, '=0', '');
  CFDef := CellIsRule.FormatDef;
  CFDef.ApplyNumericFormat := true;
  CFDef.NumericFormat := '@';
  Rules[0] := CellIsRule;

  xls.AddConditionalFormat(TConditionalFormat.Create(Ranges, Rules, false));

  Ranges := TArray<TXlsCellRange>.Create(
    TXlsCellRange.Create(2, 1, 4, 4)
  );

  Rules := nil;
  SetLength(Rules, 1);
  CellIsRule := TConditionalCellIsRule_Create(4, false, TConditionType.GreaterOrEqual, '=0', '');
  CFDef := CellIsRule.FormatDef;
  CFDef.ApplyNumericFormat := true;
  CFDef.NumericFormat := '@';
  Rules[0] := CellIsRule;

  xls.AddConditionalFormat(TConditionalFormat.Create(Ranges, Rules, false));

  Ranges := TArray<TXlsCellRange>.Create(
    TXlsCellRange.Create(4, 1, 4, 4)
  );

  Rules := nil;
  SetLength(Rules, 3);
  BeginsWithRule := TConditionalBeginsWithTextRule_Create(1, false, 'variable');
  CFDef := BeginsWithRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.39988402966399);
  Rules[0] := BeginsWithRule;

  BeginsWithRule := TConditionalBeginsWithTextRule_Create(2, false, 'goto');
  CFDef := BeginsWithRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromArgb($92, $D0, $50);
  Rules[1] := BeginsWithRule;

  ContainsTextRule := TConditionalContainsTextRule_Create(3, false, '#label#');
  CFDef := ContainsTextRule.FormatDef;
  CFDef.ApplyFont.BoldAndItalic := true;
  CFDef.ApplyFont.Strikeout := true;
  CFDef.Font.Style := [TFlxFontStyles.Bold];
  CFDef.ApplyNumericFormat := true;
  CFDef.NumericFormat := '@';
  CFDef.ApplyFill.BgColor := true;
  CFDef.Fill.BgColor := TExcelColor.FromArgb($FF, $00, $00);
  Rules[2] := ContainsTextRule;

  xls.AddConditionalFormat(TConditionalFormat.Create(Ranges, Rules, false));



  xls.ActiveSheet := 4;

  xls.SheetName := 'Trim';

  xls.SetColWidth(1, 1, 38509);

  xls.SetRowHeight(1, 825);
  xls.SetRowHeight(2, 315);

  xls.MergeCells(1, 1, 1, 5);

  fmt := xls.GetCellVisibleFormatDef(1, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
  xls.SetCellValue(1, 1, 'Trimming SSH and Telnet output');

  fmt := xls.GetCellVisibleFormatDef(1, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(2, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 1, xls.AddFormat(fmt));
  xls.SetCellValue(2, 1, 'Type any text from A5 and down. Lines in SSH and Telnet output will be removed if'
  + ' any text matches.');

  fmt := xls.GetCellVisibleFormatDef(5, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(5, 1, xls.AddFormat(fmt));
  xls.SetCellValue(5, 1, 'Start on this row. Matching of text will stop at first empty row.');

  fmt := xls.GetStyle(xls.GetBuiltInStyleName(TBuiltInStyle.Hyperlink, 0), true);
  xls.SetCellFormat(8, 1, xls.AddFormat(fmt));

  xls.SelectCell(1, 1, false);


  xls.ActiveSheet := 5;

  xls.SheetName := 'Help';
  xls.SheetZoom := 91;
  xls.SheetView := TSheetView.Create(TSheetViewType.Normal, true, true, 91, 0, 0);

  xls.SetColWidth(1, 4, 9362);

  xls.SetColWidth(5, 5, 37193);

  xls.SetRowHeight(1, 960);
  xls.SetRowHeight(2, 465);
  xls.SetRowHeight(78, 930);
  xls.SetRowHeight(79, 375);

  xls.MergeCells(1, 1, 1, 5);
  xls.MergeCells(78, 1, 78, 5);

  fmt := xls.GetCellVisibleFormatDef(1, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
  xls.SetCellValue(1, 1, 'ScriptPilot Command Index');

  fmt := xls.GetCellVisibleFormatDef(1, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(1, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 560;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(1, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(2, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 1, xls.AddFormat(fmt));
  xls.SetCellValue(2, 1, 'Command');

  fmt := xls.GetCellVisibleFormatDef(2, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 2, xls.AddFormat(fmt));
  xls.SetCellValue(2, 2, '1st parameter');

  fmt := xls.GetCellVisibleFormatDef(2, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 3, xls.AddFormat(fmt));
  xls.SetCellValue(2, 3, '2nd parameter');

  fmt := xls.GetCellVisibleFormatDef(2, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 4, xls.AddFormat(fmt));
  xls.SetCellValue(2, 4, '3rd parameter');

  fmt := xls.GetCellVisibleFormatDef(2, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(2, 5, xls.AddFormat(fmt));
  xls.SetCellValue(2, 5, 'Description');

  fmt := xls.GetCellVisibleFormatDef(3, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(3, 1, xls.AddFormat(fmt));
  xls.SetCellValue(3, 1, '#label#');

  fmt := xls.GetCellVisibleFormatDef(3, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(3, 2, xls.AddFormat(fmt));
  xls.SetCellValue(3, 2, 'Name a label');

  fmt := xls.GetCellVisibleFormatDef(3, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(3, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(3, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(3, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(3, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(3, 5, xls.AddFormat(fmt));
  xls.SetCellValue(3, 5, 'The label gets converted to a line number at runtime');

  fmt := xls.GetCellVisibleFormatDef(4, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(4, 1, xls.AddFormat(fmt));
  xls.SetCellValue(4, 1, 'AskForInput');

  fmt := xls.GetCellVisibleFormatDef(4, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(4, 2, xls.AddFormat(fmt));
  xls.SetCellValue(4, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(4, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(4, 3, xls.AddFormat(fmt));
  xls.SetCellValue(4, 3, 'Title');

  fmt := xls.GetCellVisibleFormatDef(4, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(4, 4, xls.AddFormat(fmt));
  xls.SetCellValue(4, 4, 'Default Value');

  fmt := xls.GetCellVisibleFormatDef(4, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(4, 5, xls.AddFormat(fmt));
  xls.SetCellValue(4, 5, 'Pause the execution of the script and shows the end user a message with an input'
  + ' edit and OK button. Input is assigned to the variable specified.');

  fmt := xls.GetCellVisibleFormatDef(5, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(5, 1, xls.AddFormat(fmt));
  xls.SetCellValue(5, 1, 'AskForInputTable');

  fmt := xls.GetCellVisibleFormatDef(5, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(5, 2, xls.AddFormat(fmt));
  xls.SetCellValue(5, 2, 'Message');

  fmt := xls.GetCellVisibleFormatDef(5, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(5, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(5, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(5, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(5, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(5, 5, xls.AddFormat(fmt));
  xls.SetCellValue(5, 5, 'Pause the execution of the script and present a table of input fields from settings'
  + ' sheet, the user must fill out. Values will be put into variables');

  fmt := xls.GetCellVisibleFormatDef(6, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(6, 1, xls.AddFormat(fmt));
  xls.SetCellValue(6, 1, 'ClearLog');

  fmt := xls.GetCellVisibleFormatDef(6, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(6, 2, xls.AddFormat(fmt));
  xls.SetCellValue(6, 2, 'Blank | Export');

  fmt := xls.GetCellVisibleFormatDef(6, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(6, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(6, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(6, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(6, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(6, 5, xls.AddFormat(fmt));
  xls.SetCellValue(6, 5, 'Clears the log. If the word Export in parameter 1, the log is exported to file before'
  + ' log is cleared.');

  fmt := xls.GetCellVisibleFormatDef(7, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(7, 1, xls.AddFormat(fmt));
  xls.SetCellValue(7, 1, 'CMDCommand');

  fmt := xls.GetCellVisibleFormatDef(7, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(7, 2, xls.AddFormat(fmt));
  xls.SetCellValue(7, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(7, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(7, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(7, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(7, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(7, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(7, 5, xls.AddFormat(fmt));
  xls.SetCellValue(7, 5, 'Executes a DOS CMD command. Can be nested with &. Example command string: cd c:\users&md'
  + ' temp&copy f:\*.*');

  fmt := xls.GetCellVisibleFormatDef(8, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(8, 1, xls.AddFormat(fmt));
  xls.SetCellValue(8, 1, 'CMDCommandVerbose');

  fmt := xls.GetCellVisibleFormatDef(8, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(8, 2, xls.AddFormat(fmt));
  xls.SetCellValue(8, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(8, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(8, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(8, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(8, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(8, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(8, 5, xls.AddFormat(fmt));
  xls.SetCellValue(8, 5, 'Executes a DOS CMD command. Can be nested with &. Example command string: cd c:\users&md'
  + ' temp&copy f:\*.* - Shows output in log');

  fmt := xls.GetCellVisibleFormatDef(9, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(9, 1, xls.AddFormat(fmt));
  xls.SetCellValue(9, 1, 'CMDContent');

  fmt := xls.GetCellVisibleFormatDef(9, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(9, 2, xls.AddFormat(fmt));
  xls.SetCellValue(9, 2, 'Excel sheet name with content');

  fmt := xls.GetCellVisibleFormatDef(9, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(9, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(9, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(9, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(9, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(9, 5, xls.AddFormat(fmt));
  xls.SetCellValue(9, 5, 'Sends content of specified sheet to a CMD as an external process (CMD Window)');

  fmt := xls.GetCellVisibleFormatDef(10, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(10, 1, xls.AddFormat(fmt));
  xls.SetCellValue(10, 1, 'CMDTextFile');

  fmt := xls.GetCellVisibleFormatDef(10, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(10, 2, xls.AddFormat(fmt));
  xls.SetCellValue(10, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(10, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(10, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(10, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(10, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(10, 5, xls.AddFormat(fmt));
  xls.SetCellValue(10, 5, 'Executes a CMD Batch file after stringreplace (creates a new temporary file and leaves'
  + ' original intact)');

  fmt := xls.GetCellVisibleFormatDef(11, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(11, 1, xls.AddFormat(fmt));
  xls.SetCellValue(11, 1, 'DataSourceSetIndex');

  fmt := xls.GetCellVisibleFormatDef(11, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(11, 2, xls.AddFormat(fmt));
  xls.SetCellValue(11, 2, 'Index number');

  fmt := xls.GetCellVisibleFormatDef(11, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(11, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(11, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(11, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(11, 5, xls.AddFormat(fmt));
  xls.SetCellValue(11, 5, 'Change the selected datasource index. First in the drop down list is 1');

  fmt := xls.GetCellVisibleFormatDef(12, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(12, 1, xls.AddFormat(fmt));
  xls.SetCellValue(12, 1, 'ExportLog');

  fmt := xls.GetCellVisibleFormatDef(12, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(12, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(12, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(12, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(12, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(12, 5, xls.AddFormat(fmt));
  xls.SetCellValue(12, 5, 'Export the log in the current state to the DATA folder of the active project.');

  fmt := xls.GetCellVisibleFormatDef(13, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(13, 1, xls.AddFormat(fmt));
  xls.SetCellValue(13, 1, 'FetchLogToVariable');

  fmt := xls.GetCellVisibleFormatDef(13, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(13, 2, xls.AddFormat(fmt));
  xls.SetCellValue(13, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(13, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(13, 3, xls.AddFormat(fmt));
  xls.SetCellValue(13, 3, 'Text to search for in log output');

  fmt := xls.GetCellVisibleFormatDef(13, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(13, 4, xls.AddFormat(fmt));
  xls.SetCellValue(13, 4, 'Grab # of letters after searchword');

  fmt := xls.GetCellVisibleFormatDef(13, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(13, 5, xls.AddFormat(fmt));
  xls.SetCellValue(13, 5, 'Grabs text from the log and puts result in a variable. Command will only search the'
  + ' last verbose output');

  fmt := xls.GetCellVisibleFormatDef(14, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(14, 1, xls.AddFormat(fmt));
  xls.SetCellValue(14, 1, 'GenerateNotepadOutput');

  fmt := xls.GetCellVisibleFormatDef(14, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(14, 2, xls.AddFormat(fmt));
  xls.SetCellValue(14, 2, 'Excel sheet name with content');

  fmt := xls.GetCellVisibleFormatDef(14, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(14, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(14, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(14, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(14, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(14, 5, xls.AddFormat(fmt));
  xls.SetCellValue(14, 5, 'Generate a Notepad document from an Excel sheet with the variables replaced with'
  + ' current values.');

  fmt := xls.GetCellVisibleFormatDef(15, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(15, 1, xls.AddFormat(fmt));
  xls.SetCellValue(15, 1, 'GenerateWordOutput');

  fmt := xls.GetCellVisibleFormatDef(15, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(15, 2, xls.AddFormat(fmt));
  xls.SetCellValue(15, 2, 'Source filename');

  fmt := xls.GetCellVisibleFormatDef(15, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(15, 3, xls.AddFormat(fmt));
  xls.SetCellValue(15, 3, 'Save filename');

  fmt := xls.GetCellVisibleFormatDef(15, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(15, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(15, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(15, 5, xls.AddFormat(fmt));
  xls.SetCellValue(15, 5, 'Generate a Word document based on a template Word document in the data folder of'
  + ' the project and replaces all variables with current values');

  fmt := xls.GetCellVisibleFormatDef(16, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(16, 1, xls.AddFormat(fmt));
  xls.SetCellValue(16, 1, 'GetPublicIP');

  fmt := xls.GetCellVisibleFormatDef(16, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(16, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(16, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(16, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(16, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(16, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(16, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(16, 5, xls.AddFormat(fmt));
  xls.SetCellValue(16, 5, 'Collects the computers Public IP in use and sets the value to the #ApplicationPublicIP#'
  + ' variable.');

  fmt := xls.GetCellVisibleFormatDef(17, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(17, 1, xls.AddFormat(fmt));
  xls.SetCellValue(17, 1, 'GotoIFDay');

  fmt := xls.GetCellVisibleFormatDef(17, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(17, 2, xls.AddFormat(fmt));
  xls.SetCellValue(17, 2, 'What day (1-7)');

  fmt := xls.GetCellVisibleFormatDef(17, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(17, 3, xls.AddFormat(fmt));
  xls.SetCellValue(17, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(17, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(17, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(17, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(17, 5, xls.AddFormat(fmt));
  xls.SetCellValue(17, 5, 'Row or label to goto if the day is a certain day of the week (1-7). Sunday = 1');

  fmt := xls.GetCellVisibleFormatDef(18, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(18, 1, xls.AddFormat(fmt));
  xls.SetCellValue(18, 1, 'GotoIFFileExist');

  fmt := xls.GetCellVisibleFormatDef(18, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(18, 2, xls.AddFormat(fmt));
  xls.SetCellValue(18, 2, 'File to exist');

  fmt := xls.GetCellVisibleFormatDef(18, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(18, 3, xls.AddFormat(fmt));
  xls.SetCellValue(18, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(18, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(18, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(18, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(18, 5, xls.AddFormat(fmt));
  xls.SetCellValue(18, 5, 'Row or label to goto if the specified file exist.');

  fmt := xls.GetCellVisibleFormatDef(19, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(19, 1, xls.AddFormat(fmt));
  xls.SetCellValue(19, 1, 'GotoIFHostAlive');

  fmt := xls.GetCellVisibleFormatDef(19, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(19, 2, xls.AddFormat(fmt));
  xls.SetCellValue(19, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(19, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(19, 3, xls.AddFormat(fmt));
  xls.SetCellValue(19, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(19, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(19, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(19, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(19, 5, xls.AddFormat(fmt));
  xls.SetCellValue(19, 5, 'Row or label to goto if the host sends an excho reply.');

  fmt := xls.GetCellVisibleFormatDef(20, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(20, 1, xls.AddFormat(fmt));
  xls.SetCellValue(20, 1, 'GotoIFMonth');

  fmt := xls.GetCellVisibleFormatDef(20, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(20, 2, xls.AddFormat(fmt));
  xls.SetCellValue(20, 2, 'What month (1-12)');

  fmt := xls.GetCellVisibleFormatDef(20, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(20, 3, xls.AddFormat(fmt));
  xls.SetCellValue(20, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(20, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(20, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(20, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(20, 5, xls.AddFormat(fmt));
  xls.SetCellValue(20, 5, 'Row or label to goto the month is a certain number (1-12)');

  fmt := xls.GetCellVisibleFormatDef(21, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(21, 1, xls.AddFormat(fmt));
  xls.SetCellValue(21, 1, 'GotoIfSSHConnected');

  fmt := xls.GetCellVisibleFormatDef(21, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(21, 2, xls.AddFormat(fmt));
  xls.SetCellValue(21, 2, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(21, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(21, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(21, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(21, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(21, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(21, 5, xls.AddFormat(fmt));
  xls.SetCellValue(21, 5, 'Row or label to goto if the current state of SSH is connected');

  fmt := xls.GetCellVisibleFormatDef(22, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(22, 1, xls.AddFormat(fmt));
  xls.SetCellValue(22, 1, 'GotoIFTelnetConnected');

  fmt := xls.GetCellVisibleFormatDef(22, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(22, 2, xls.AddFormat(fmt));
  xls.SetCellValue(22, 2, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(22, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(22, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(22, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(22, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(22, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(22, 5, xls.AddFormat(fmt));
  xls.SetCellValue(22, 5, 'Row or label to goto if the current state of Telnet is connected');

  fmt := xls.GetCellVisibleFormatDef(23, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(23, 1, xls.AddFormat(fmt));
  xls.SetCellValue(23, 1, 'GotoIfURL');

  fmt := xls.GetCellVisibleFormatDef(23, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(23, 2, xls.AddFormat(fmt));
  xls.SetCellValue(23, 2, 'url');

  fmt := xls.GetCellVisibleFormatDef(23, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(23, 3, xls.AddFormat(fmt));
  xls.SetCellValue(23, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(23, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(23, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(23, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(23, 5, xls.AddFormat(fmt));
  xls.SetCellValue(23, 5, 'Row or label to goto if an URL is up and running');

  fmt := xls.GetCellVisibleFormatDef(24, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(24, 1, xls.AddFormat(fmt));
  xls.SetCellValue(24, 1, 'GotoIFVariableEquals');

  fmt := xls.GetCellVisibleFormatDef(24, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(24, 2, xls.AddFormat(fmt));
  xls.SetCellValue(24, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(24, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(24, 3, xls.AddFormat(fmt));
  xls.SetCellValue(24, 3, 'value to be equal');

  fmt := xls.GetCellVisibleFormatDef(24, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(24, 4, xls.AddFormat(fmt));
  xls.SetCellValue(24, 4, 'Row or label to goto if equal');

  fmt := xls.GetCellVisibleFormatDef(24, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(24, 5, xls.AddFormat(fmt));
  xls.SetCellValue(24, 5, 'Row or label to goto if a variable is equal to the specified value.');

  fmt := xls.GetCellVisibleFormatDef(25, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(25, 1, xls.AddFormat(fmt));
  xls.SetCellValue(25, 1, 'GotoIFWeek');

  fmt := xls.GetCellVisibleFormatDef(25, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(25, 2, xls.AddFormat(fmt));
  xls.SetCellValue(25, 2, 'What week (1-52)');

  fmt := xls.GetCellVisibleFormatDef(25, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(25, 3, xls.AddFormat(fmt));
  xls.SetCellValue(25, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(25, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(25, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(25, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(25, 5, xls.AddFormat(fmt));
  xls.SetCellValue(25, 5, 'Row or label to goto if the week number is a certain number (1-52)');

  fmt := xls.GetCellVisibleFormatDef(26, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(26, 1, xls.AddFormat(fmt));
  xls.SetCellValue(26, 1, 'GotoIFYes');

  fmt := xls.GetCellVisibleFormatDef(26, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(26, 2, xls.AddFormat(fmt));
  xls.SetCellValue(26, 2, 'Message / Question');

  fmt := xls.GetCellVisibleFormatDef(26, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(26, 3, xls.AddFormat(fmt));
  xls.SetCellValue(26, 3, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(26, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(26, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(26, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(26, 5, xls.AddFormat(fmt));
  xls.SetCellValue(26, 5, 'Row or label to goto if "Yes".');

  fmt := xls.GetCellVisibleFormatDef(27, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(27, 1, xls.AddFormat(fmt));
  xls.SetCellValue(27, 1, 'GotoRow');

  fmt := xls.GetCellVisibleFormatDef(27, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(27, 2, xls.AddFormat(fmt));
  xls.SetCellValue(27, 2, 'Row or label to go to');

  fmt := xls.GetCellVisibleFormatDef(27, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(27, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(27, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(27, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(27, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(27, 5, xls.AddFormat(fmt));
  xls.SetCellValue(27, 5, 'Row or label to goto');

  fmt := xls.GetCellVisibleFormatDef(28, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(28, 1, xls.AddFormat(fmt));
  xls.SetCellValue(28, 1, 'GotoSelector');

  fmt := xls.GetCellVisibleFormatDef(28, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(28, 2, xls.AddFormat(fmt));
  xls.SetCellValue(28, 2, 'Excel sheet name with selector options');

  fmt := xls.GetCellVisibleFormatDef(28, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(28, 3, xls.AddFormat(fmt));
  xls.SetCellValue(28, 3, 'Message');

  fmt := xls.GetCellVisibleFormatDef(28, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(28, 4, xls.AddFormat(fmt));
  xls.SetCellValue(28, 4, 'Continue Button Text');

  fmt := xls.GetCellVisibleFormatDef(28, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(28, 5, xls.AddFormat(fmt));
  xls.SetCellValue(28, 5, 'Pause the execution and show a drop down list of options. The list matches labels'
  + ' in the script and application will jump to selected label selected.');

  fmt := xls.GetCellVisibleFormatDef(29, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(29, 1, xls.AddFormat(fmt));
  xls.SetCellValue(29, 1, 'InfoMessage');

  fmt := xls.GetCellVisibleFormatDef(29, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(29, 2, xls.AddFormat(fmt));
  xls.SetCellValue(29, 2, 'Text to show');

  fmt := xls.GetCellVisibleFormatDef(29, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(29, 3, xls.AddFormat(fmt));
  xls.SetCellValue(29, 3, 'Image name');

  fmt := xls.GetCellVisibleFormatDef(29, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(29, 4, xls.AddFormat(fmt));
  xls.SetCellValue(29, 4, 'Info Banner Heigth in pixels');

  fmt := xls.GetCellVisibleFormatDef(29, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(29, 5, xls.AddFormat(fmt));
  xls.SetCellValue(29, 5, 'Show information in the information banner above the log viewer. Leave any parameter'
  + ' blank to not show that part');

  fmt := xls.GetCellVisibleFormatDef(30, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(30, 1, xls.AddFormat(fmt));
  xls.SetCellValue(30, 1, 'InformationOff');

  fmt := xls.GetCellVisibleFormatDef(30, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(30, 2, xls.AddFormat(fmt));
  xls.SetCellValue(30, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(30, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(30, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(30, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(30, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(30, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(30, 5, xls.AddFormat(fmt));
  xls.SetCellValue(30, 5, 'Hide the information banner above the log viewer. Default off Parameter ''silent'''
  + ' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(31, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(31, 1, xls.AddFormat(fmt));
  xls.SetCellValue(31, 1, 'InformationOn');

  fmt := xls.GetCellVisibleFormatDef(31, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(31, 2, xls.AddFormat(fmt));
  xls.SetCellValue(31, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(31, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(31, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(31, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(31, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(31, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(31, 5, xls.AddFormat(fmt));
  xls.SetCellValue(31, 5, 'Show the information banner above the log viewer. Default off Parameter ''silent'''
  + ' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(32, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(32, 1, xls.AddFormat(fmt));
  xls.SetCellValue(32, 1, 'LoadVariables');

  fmt := xls.GetCellVisibleFormatDef(32, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(32, 2, xls.AddFormat(fmt));
  xls.SetCellValue(32, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(32, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(32, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(32, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(32, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(32, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(32, 5, xls.AddFormat(fmt));
  xls.SetCellValue(32, 5, 'Loads previously saved variables into the running script');

  fmt := xls.GetCellVisibleFormatDef(33, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(33, 1, xls.AddFormat(fmt));
  xls.SetCellValue(33, 1, 'LogIt');

  fmt := xls.GetCellVisibleFormatDef(33, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(33, 2, xls.AddFormat(fmt));
  xls.SetCellValue(33, 2, 'Log text');

  fmt := xls.GetCellVisibleFormatDef(33, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(33, 3, xls.AddFormat(fmt));
  xls.SetCellValue(33, 3, 'Number of blank lines after');

  fmt := xls.GetCellVisibleFormatDef(33, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(33, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(33, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(33, 5, xls.AddFormat(fmt));
  xls.SetCellValue(33, 5, 'Send a log entry in the application log.');

  fmt := xls.GetCellVisibleFormatDef(34, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(34, 1, xls.AddFormat(fmt));
  xls.SetCellValue(34, 1, 'LogItOff');

  fmt := xls.GetCellVisibleFormatDef(34, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(34, 2, xls.AddFormat(fmt));
  xls.SetCellValue(34, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(34, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(34, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(34, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(34, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(34, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(34, 5, xls.AddFormat(fmt));
  xls.SetCellValue(34, 5, 'Hides all log entries from script and application. Parameter ''silent'' will not'
  + ' log this command');

  fmt := xls.GetCellVisibleFormatDef(35, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(35, 1, xls.AddFormat(fmt));
  xls.SetCellValue(35, 1, 'LogItOn');

  fmt := xls.GetCellVisibleFormatDef(35, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(35, 2, xls.AddFormat(fmt));
  xls.SetCellValue(35, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(35, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(35, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(35, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(35, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(35, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(35, 5, xls.AddFormat(fmt));
  xls.SetCellValue(35, 5, 'Shows all log entries (default) from script and application. Parameter ''silent'''
  + ' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(36, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(36, 1, xls.AddFormat(fmt));
  xls.SetCellValue(36, 1, 'LogItTime');

  fmt := xls.GetCellVisibleFormatDef(36, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(36, 2, xls.AddFormat(fmt));
  xls.SetCellValue(36, 2, 'Log text');

  fmt := xls.GetCellVisibleFormatDef(36, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(36, 3, xls.AddFormat(fmt));
  xls.SetCellValue(36, 3, 'Number of blank lines');

  fmt := xls.GetCellVisibleFormatDef(36, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(36, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(36, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(36, 5, xls.AddFormat(fmt));
  xls.SetCellValue(36, 5, 'Send a log entry in the application log, starting with date and time, before the'
  + ' log text.');

  fmt := xls.GetCellVisibleFormatDef(37, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(37, 1, xls.AddFormat(fmt));
  xls.SetCellValue(37, 1, 'Message');

  fmt := xls.GetCellVisibleFormatDef(37, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(37, 2, xls.AddFormat(fmt));
  xls.SetCellValue(37, 2, 'Message');

  fmt := xls.GetCellVisibleFormatDef(37, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(37, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(37, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(37, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(37, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(37, 5, xls.AddFormat(fmt));
  xls.SetCellValue(37, 5, 'Pause the execution of the script and shows the end user a pop up box with a message'
  + ' and OK button.');

  fmt := xls.GetCellVisibleFormatDef(38, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(38, 1, xls.AddFormat(fmt));
  xls.SetCellValue(38, 1, 'MessageImage');

  fmt := xls.GetCellVisibleFormatDef(38, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(38, 2, xls.AddFormat(fmt));
  xls.SetCellValue(38, 2, 'Message above picture');

  fmt := xls.GetCellVisibleFormatDef(38, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(38, 3, xls.AddFormat(fmt));
  xls.SetCellValue(38, 3, 'Image name');

  fmt := xls.GetCellVisibleFormatDef(38, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(38, 4, xls.AddFormat(fmt));
  xls.SetCellValue(38, 4, 'Continue Button Text');

  fmt := xls.GetCellVisibleFormatDef(38, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(38, 5, xls.AddFormat(fmt));
  xls.SetCellValue(38, 5, 'Pause the execution of the script and shows the end user a message with a belonging'
  + ' image, and a button to continue.');

  fmt := xls.GetCellVisibleFormatDef(39, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(39, 1, xls.AddFormat(fmt));
  xls.SetCellValue(39, 1, 'Progressbar');

  fmt := xls.GetCellVisibleFormatDef(39, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(39, 2, xls.AddFormat(fmt));
  xls.SetCellValue(39, 2, 'Number [0-100]');

  fmt := xls.GetCellVisibleFormatDef(39, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(39, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(39, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(39, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(39, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(39, 5, xls.AddFormat(fmt));
  xls.SetCellValue(39, 5, 'Lets you control the Progressbar while script runs. Call this to show the progress'
  + ' in the script. Number represents % finished.');

  fmt := xls.GetCellVisibleFormatDef(40, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(40, 1, xls.AddFormat(fmt));
  xls.SetCellValue(40, 1, 'PSCommand');

  fmt := xls.GetCellVisibleFormatDef(40, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(40, 2, xls.AddFormat(fmt));
  xls.SetCellValue(40, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(40, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(40, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(40, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(40, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(40, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(40, 5, xls.AddFormat(fmt));
  xls.SetCellValue(40, 5, 'Executes a PowerShell command. Can be nested with ;. Example command string: get-date;get-aduser');

  fmt := xls.GetCellVisibleFormatDef(41, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(41, 1, xls.AddFormat(fmt));
  xls.SetCellValue(41, 1, 'PSCommandVerbose');

  fmt := xls.GetCellVisibleFormatDef(41, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(41, 2, xls.AddFormat(fmt));
  xls.SetCellValue(41, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(41, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(41, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(41, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(41, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(41, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(41, 5, xls.AddFormat(fmt));
  xls.SetCellValue(41, 5, 'Executes a PowerShell command. Can be nested with ;. Example command string: get-date;get-aduser'
  + ' - Shows output in log');

  fmt := xls.GetCellVisibleFormatDef(42, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(42, 1, xls.AddFormat(fmt));
  xls.SetCellValue(42, 1, 'PSContent');

  fmt := xls.GetCellVisibleFormatDef(42, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(42, 2, xls.AddFormat(fmt));
  xls.SetCellValue(42, 2, 'Excel sheet name with content');

  fmt := xls.GetCellVisibleFormatDef(42, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(42, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(42, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(42, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(42, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(42, 5, xls.AddFormat(fmt));
  xls.SetCellValue(42, 5, 'Sends content of specified sheet to a PowerShell session as an external process (PowerShell'
  + ' Window)');

  fmt := xls.GetCellVisibleFormatDef(43, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(43, 1, xls.AddFormat(fmt));
  xls.SetCellValue(43, 1, 'PSTextFile');

  fmt := xls.GetCellVisibleFormatDef(43, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(43, 2, xls.AddFormat(fmt));
  xls.SetCellValue(43, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(43, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(43, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(43, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(43, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(43, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(43, 5, xls.AddFormat(fmt));
  xls.SetCellValue(43, 5, 'Executes a PowerShell PS1 file after stringreplace (creates a new temporary file'
  + ' and leaves original intact)');

  fmt := xls.GetCellVisibleFormatDef(44, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(44, 1, xls.AddFormat(fmt));
  xls.SetCellValue(44, 1, 'QuitScriptPilot');

  fmt := xls.GetCellVisibleFormatDef(44, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(44, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(44, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(44, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(44, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(44, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(44, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(44, 5, xls.AddFormat(fmt));
  xls.SetCellValue(44, 5, 'Stops execution and quits the application');

  fmt := xls.GetCellVisibleFormatDef(45, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(45, 1, xls.AddFormat(fmt));
  xls.SetCellValue(45, 1, 'Remark');

  fmt := xls.GetCellVisibleFormatDef(45, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(45, 2, xls.AddFormat(fmt));
  xls.SetCellValue(45, 2, 'Text');

  fmt := xls.GetCellVisibleFormatDef(45, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(45, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(45, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(45, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(45, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(45, 5, xls.AddFormat(fmt));
  xls.SetCellValue(45, 5, 'Comments in the script that will be ignored by the application.');

  fmt := xls.GetCellVisibleFormatDef(46, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(46, 1, xls.AddFormat(fmt));
  xls.SetCellValue(46, 1, 'RunApp');

  fmt := xls.GetCellVisibleFormatDef(46, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(46, 2, xls.AddFormat(fmt));
  xls.SetCellValue(46, 2, 'Application name');

  fmt := xls.GetCellVisibleFormatDef(46, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(46, 3, xls.AddFormat(fmt));
  xls.SetCellValue(46, 3, 'Application parameters');

  fmt := xls.GetCellVisibleFormatDef(46, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(46, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(46, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(46, 5, xls.AddFormat(fmt));
  xls.SetCellValue(46, 5, 'Start an external application.');

  fmt := xls.GetCellVisibleFormatDef(47, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(47, 1, xls.AddFormat(fmt));
  xls.SetCellValue(47, 1, 'RunAppAndWait');

  fmt := xls.GetCellVisibleFormatDef(47, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(47, 2, xls.AddFormat(fmt));
  xls.SetCellValue(47, 2, 'Application name');

  fmt := xls.GetCellVisibleFormatDef(47, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(47, 3, xls.AddFormat(fmt));
  xls.SetCellValue(47, 3, 'Application parameters');

  fmt := xls.GetCellVisibleFormatDef(47, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(47, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(47, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(47, 5, xls.AddFormat(fmt));
  xls.SetCellValue(47, 5, 'Start an external application and wait for it to close before the script continues.');

  fmt := xls.GetCellVisibleFormatDef(48, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(48, 1, xls.AddFormat(fmt));
  xls.SetCellValue(48, 1, 'RunWaitForConnectionTelnet');

  fmt := xls.GetCellVisibleFormatDef(48, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(48, 2, xls.AddFormat(fmt));
  xls.SetCellValue(48, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(48, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(48, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(48, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(48, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(48, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(48, 5, xls.AddFormat(fmt));
  xls.SetCellValue(48, 5, 'Pause the execution and automatically continues when the application can Telnet to'
  + ' a host.');

  fmt := xls.GetCellVisibleFormatDef(49, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(49, 1, xls.AddFormat(fmt));
  xls.SetCellValue(49, 1, 'SaveVariables');

  fmt := xls.GetCellVisibleFormatDef(49, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(49, 2, xls.AddFormat(fmt));
  xls.SetCellValue(49, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(49, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(49, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(49, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(49, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(49, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(49, 5, xls.AddFormat(fmt));
  xls.SetCellValue(49, 5, 'Saves the current variables into a file');

  fmt := xls.GetCellVisibleFormatDef(50, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(50, 1, xls.AddFormat(fmt));
  xls.SetCellValue(50, 1, 'ScriptRowOff');

  fmt := xls.GetCellVisibleFormatDef(50, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(50, 2, xls.AddFormat(fmt));
  xls.SetCellValue(50, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(50, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(50, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(50, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(50, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(50, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(50, 5, xls.AddFormat(fmt));
  xls.SetCellValue(50, 5, 'Hide the current command shown under log during script execution. Default on. Parameter'
  + ' ''silent'' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(51, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(51, 1, xls.AddFormat(fmt));
  xls.SetCellValue(51, 1, 'ScriptRowOn');

  fmt := xls.GetCellVisibleFormatDef(51, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(51, 2, xls.AddFormat(fmt));
  xls.SetCellValue(51, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(51, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(51, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(51, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(51, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(51, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(51, 5, xls.AddFormat(fmt));
  xls.SetCellValue(51, 5, 'Show the current command shown under log during script execution. Default on. Parameter'
  + ' ''silent'' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(52, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(52, 1, xls.AddFormat(fmt));
  xls.SetCellValue(52, 1, 'SendSyslog');

  fmt := xls.GetCellVisibleFormatDef(52, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(52, 2, xls.AddFormat(fmt));
  xls.SetCellValue(52, 2, 'Host IP or DNS');

  fmt := xls.GetCellVisibleFormatDef(52, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(52, 3, xls.AddFormat(fmt));
  xls.SetCellValue(52, 3, 'Severity (0-7)');

  fmt := xls.GetCellVisibleFormatDef(52, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(52, 4, xls.AddFormat(fmt));
  xls.SetCellValue(52, 4, 'Message');

  fmt := xls.GetCellVisibleFormatDef(52, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(52, 5, xls.AddFormat(fmt));
  xls.SetCellValue(52, 5, 'Sends a syslog message to the specified host');

  fmt := xls.GetCellVisibleFormatDef(53, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(53, 1, xls.AddFormat(fmt));
  xls.SetCellValue(53, 1, 'SSHCommand');

  fmt := xls.GetCellVisibleFormatDef(53, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(53, 2, xls.AddFormat(fmt));
  xls.SetCellValue(53, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(53, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(53, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(53, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(53, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(53, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(53, 5, xls.AddFormat(fmt));
  xls.SetCellValue(53, 5, 'Send a SSH command to the active SSH connection.');

  fmt := xls.GetCellVisibleFormatDef(54, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(54, 1, xls.AddFormat(fmt));
  xls.SetCellValue(54, 1, 'SSHCommandEx');

  fmt := xls.GetCellVisibleFormatDef(54, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(54, 2, xls.AddFormat(fmt));
  xls.SetCellValue(54, 2, 'Host IP or DNS');

  fmt := xls.GetCellVisibleFormatDef(54, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(54, 3, xls.AddFormat(fmt));
  xls.SetCellValue(54, 3, 'Command');

  fmt := xls.GetCellVisibleFormatDef(54, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(54, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(54, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(54, 5, xls.AddFormat(fmt));
  xls.SetCellValue(54, 5, 'Extended version with retires');

  fmt := xls.GetCellVisibleFormatDef(55, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(55, 1, xls.AddFormat(fmt));
  xls.SetCellValue(55, 1, 'SSHCommandVerbose');

  fmt := xls.GetCellVisibleFormatDef(55, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(55, 2, xls.AddFormat(fmt));
  xls.SetCellValue(55, 2, 'command');

  fmt := xls.GetCellVisibleFormatDef(55, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(55, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(55, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(55, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(55, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(55, 5, xls.AddFormat(fmt));
  xls.SetCellValue(55, 5, 'Send a SSH command to the active SSH connection and log the respons.');

  fmt := xls.GetCellVisibleFormatDef(56, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(56, 1, xls.AddFormat(fmt));
  xls.SetCellValue(56, 1, 'SSHConnect');

  fmt := xls.GetCellVisibleFormatDef(56, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(56, 2, xls.AddFormat(fmt));
  xls.SetCellValue(56, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(56, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(56, 3, xls.AddFormat(fmt));
  xls.SetCellValue(56, 3, 'Username');

  fmt := xls.GetCellVisibleFormatDef(56, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(56, 4, xls.AddFormat(fmt));
  xls.SetCellValue(56, 4, 'Password');

  fmt := xls.GetCellVisibleFormatDef(56, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(56, 5, xls.AddFormat(fmt));
  xls.SetCellValue(56, 5, 'Connects to a SSH Host.');

  fmt := xls.GetCellVisibleFormatDef(57, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(57, 1, xls.AddFormat(fmt));
  xls.SetCellValue(57, 1, 'SSHConnectEx');

  fmt := xls.GetCellVisibleFormatDef(57, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(57, 2, xls.AddFormat(fmt));
  xls.SetCellValue(57, 2, 'Host IP or DNS');

  fmt := xls.GetCellVisibleFormatDef(57, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(57, 3, xls.AddFormat(fmt));
  xls.SetCellValue(57, 3, 'Username');

  fmt := xls.GetCellVisibleFormatDef(57, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(57, 4, xls.AddFormat(fmt));
  xls.SetCellValue(57, 4, 'Password');

  fmt := xls.GetCellVisibleFormatDef(57, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(57, 5, xls.AddFormat(fmt));
  xls.SetCellValue(57, 5, 'Extended version with retires and multiple SSH conections');

  fmt := xls.GetCellVisibleFormatDef(58, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(58, 1, xls.AddFormat(fmt));
  xls.SetCellValue(58, 1, 'SSHContent');

  fmt := xls.GetCellVisibleFormatDef(58, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(58, 2, xls.AddFormat(fmt));
  xls.SetCellValue(58, 2, 'Excel sheet name with content');

  fmt := xls.GetCellVisibleFormatDef(58, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(58, 3, xls.AddFormat(fmt));
  xls.SetCellValue(58, 3, 'Line Send Delay Milliseconds');

  fmt := xls.GetCellVisibleFormatDef(58, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(58, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(58, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(58, 5, xls.AddFormat(fmt));
  xls.SetCellValue(58, 5, 'Sends content of specified sheet to a SSH Host.');

  fmt := xls.GetCellVisibleFormatDef(59, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(59, 1, xls.AddFormat(fmt));
  xls.SetCellValue(59, 1, 'SSHDisconnect');

  fmt := xls.GetCellVisibleFormatDef(59, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(59, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(59, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(59, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(59, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(59, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(59, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(59, 5, xls.AddFormat(fmt));
  xls.SetCellValue(59, 5, 'Disconnects the connection to a SSH Host.');

  fmt := xls.GetCellVisibleFormatDef(60, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(60, 1, xls.AddFormat(fmt));
  xls.SetCellValue(60, 1, 'SSHTextFile');

  fmt := xls.GetCellVisibleFormatDef(60, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(60, 2, xls.AddFormat(fmt));
  xls.SetCellValue(60, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(60, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(60, 3, xls.AddFormat(fmt));
  xls.SetCellValue(60, 3, 'Line Send Delay Milliseconds');

  fmt := xls.GetCellVisibleFormatDef(60, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(60, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(60, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(60, 5, xls.AddFormat(fmt));
  xls.SetCellValue(60, 5, 'Sends content of specified notepad textfile to the SSH host.');

  fmt := xls.GetCellVisibleFormatDef(61, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(61, 1, xls.AddFormat(fmt));
  xls.SetCellValue(61, 1, 'TelnetCommand');

  fmt := xls.GetCellVisibleFormatDef(61, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(61, 2, xls.AddFormat(fmt));
  xls.SetCellValue(61, 2, 'Command');

  fmt := xls.GetCellVisibleFormatDef(61, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(61, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(61, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(61, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(61, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(61, 5, xls.AddFormat(fmt));
  xls.SetCellValue(61, 5, 'Send a Telnet command to the active Telnet connection.');

  fmt := xls.GetCellVisibleFormatDef(62, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(62, 1, xls.AddFormat(fmt));
  xls.SetCellValue(62, 1, 'TelnetCommandVerbose');

  fmt := xls.GetCellVisibleFormatDef(62, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(62, 2, xls.AddFormat(fmt));
  xls.SetCellValue(62, 2, 'Command');

  fmt := xls.GetCellVisibleFormatDef(62, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(62, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(62, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(62, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(62, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(62, 5, xls.AddFormat(fmt));
  xls.SetCellValue(62, 5, 'Send a Telnet command to the active Telnet connection and log the respons.');

  fmt := xls.GetCellVisibleFormatDef(63, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(63, 1, xls.AddFormat(fmt));
  xls.SetCellValue(63, 1, 'TelnetConnect');

  fmt := xls.GetCellVisibleFormatDef(63, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(63, 2, xls.AddFormat(fmt));
  xls.SetCellValue(63, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(63, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(63, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(63, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(63, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(63, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(63, 5, xls.AddFormat(fmt));
  xls.SetCellValue(63, 5, 'Connects to a Telnet host');

  fmt := xls.GetCellVisibleFormatDef(64, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(64, 1, xls.AddFormat(fmt));
  xls.SetCellValue(64, 1, 'TelnetContent');

  fmt := xls.GetCellVisibleFormatDef(64, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(64, 2, xls.AddFormat(fmt));
  xls.SetCellValue(64, 2, 'Excel sheet name with content');

  fmt := xls.GetCellVisibleFormatDef(64, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(64, 3, xls.AddFormat(fmt));
  xls.SetCellValue(64, 3, 'Line Send Delay Milliseconds');

  fmt := xls.GetCellVisibleFormatDef(64, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(64, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(64, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(64, 5, xls.AddFormat(fmt));
  xls.SetCellValue(64, 5, 'Sends content of specified sheet to a Telnet Host.');

  fmt := xls.GetCellVisibleFormatDef(65, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(65, 1, xls.AddFormat(fmt));
  xls.SetCellValue(65, 1, 'TelnetDisconnect');

  fmt := xls.GetCellVisibleFormatDef(65, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(65, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(65, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(65, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(65, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(65, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(65, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(65, 5, xls.AddFormat(fmt));
  xls.SetCellValue(65, 5, 'Disconnects the connection to a Telnet host');

  fmt := xls.GetCellVisibleFormatDef(66, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(66, 1, xls.AddFormat(fmt));
  xls.SetCellValue(66, 1, 'TelnetTextFile');

  fmt := xls.GetCellVisibleFormatDef(66, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(66, 2, xls.AddFormat(fmt));
  xls.SetCellValue(66, 2, 'Filename in Data folder of project');

  fmt := xls.GetCellVisibleFormatDef(66, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(66, 3, xls.AddFormat(fmt));
  xls.SetCellValue(66, 3, 'Line Send Delay Milliseconds');

  fmt := xls.GetCellVisibleFormatDef(66, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(66, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(66, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(66, 5, xls.AddFormat(fmt));
  xls.SetCellValue(66, 5, 'Sends content of specified notepad textfile to the Telnet host.');

  fmt := xls.GetCellVisibleFormatDef(67, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(67, 1, xls.AddFormat(fmt));
  xls.SetCellValue(67, 1, 'TrimOff');

  fmt := xls.GetCellVisibleFormatDef(67, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(67, 2, xls.AddFormat(fmt));
  xls.SetCellValue(67, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(67, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(67, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(67, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(67, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(67, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(67, 5, xls.AddFormat(fmt));
  xls.SetCellValue(67, 5, 'Turns off trimming of SSH/Telnet output using the Trim sheet. Default off. Parameter'
  + ' ''silent'' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(68, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(68, 1, xls.AddFormat(fmt));
  xls.SetCellValue(68, 1, 'TrimOn');

  fmt := xls.GetCellVisibleFormatDef(68, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(68, 2, xls.AddFormat(fmt));
  xls.SetCellValue(68, 2, 'Blank | Silent');

  fmt := xls.GetCellVisibleFormatDef(68, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(68, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(68, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(68, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(68, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(68, 5, xls.AddFormat(fmt));
  xls.SetCellValue(68, 5, 'Turns on trimming of SSH/Telnet output using the Trim sheet. Default off Parameter'
  + ' ''silent'' will not log this command');

  fmt := xls.GetCellVisibleFormatDef(69, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(69, 1, xls.AddFormat(fmt));
  xls.SetCellValue(69, 1, 'VariableCreate');

  fmt := xls.GetCellVisibleFormatDef(69, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(69, 2, xls.AddFormat(fmt));
  xls.SetCellValue(69, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(69, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(69, 3, xls.AddFormat(fmt));
  xls.SetCellValue(69, 3, 'Initial Value to set');

  fmt := xls.GetCellVisibleFormatDef(69, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(69, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(69, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(69, 5, xls.AddFormat(fmt));
  xls.SetCellValue(69, 5, 'Creates a new variable and sets an initial value');

  fmt := xls.GetCellVisibleFormatDef(70, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(70, 1, xls.AddFormat(fmt));
  xls.SetCellValue(70, 1, 'VariableDecrease');

  fmt := xls.GetCellVisibleFormatDef(70, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(70, 2, xls.AddFormat(fmt));
  xls.SetCellValue(70, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(70, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(70, 3, xls.AddFormat(fmt));
  xls.SetCellValue(70, 3, 'Number to decrease existing variable');

  fmt := xls.GetCellVisibleFormatDef(70, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(70, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(70, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(70, 5, xls.AddFormat(fmt));
  xls.SetCellValue(70, 5, 'Decreases the numerical value of an existing variable by the specified amount');

  fmt := xls.GetCellVisibleFormatDef(71, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(71, 1, xls.AddFormat(fmt));
  xls.SetCellValue(71, 1, 'VariableIncrease');

  fmt := xls.GetCellVisibleFormatDef(71, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(71, 2, xls.AddFormat(fmt));
  xls.SetCellValue(71, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(71, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(71, 3, xls.AddFormat(fmt));
  xls.SetCellValue(71, 3, 'Number to increase existing variable');

  fmt := xls.GetCellVisibleFormatDef(71, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(71, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(71, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(71, 5, xls.AddFormat(fmt));
  xls.SetCellValue(71, 5, 'Increases the numerical value of an existing variable by the specified amount');

  fmt := xls.GetCellVisibleFormatDef(72, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(72, 1, xls.AddFormat(fmt));
  xls.SetCellValue(72, 1, 'VariableSet');

  fmt := xls.GetCellVisibleFormatDef(72, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(72, 2, xls.AddFormat(fmt));
  xls.SetCellValue(72, 2, '#variable-name#');

  fmt := xls.GetCellVisibleFormatDef(72, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(72, 3, xls.AddFormat(fmt));
  xls.SetCellValue(72, 3, 'New value to assign existing variable');

  fmt := xls.GetCellVisibleFormatDef(72, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(72, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(72, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(72, 5, xls.AddFormat(fmt));
  xls.SetCellValue(72, 5, 'Sets a value to an existing variable');

  fmt := xls.GetCellVisibleFormatDef(73, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(73, 1, xls.AddFormat(fmt));
  xls.SetCellValue(73, 1, 'WaitForConnectionSSH');

  fmt := xls.GetCellVisibleFormatDef(73, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(73, 2, xls.AddFormat(fmt));
  xls.SetCellValue(73, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(73, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(73, 3, xls.AddFormat(fmt));
  xls.SetCellValue(73, 3, 'Username');

  fmt := xls.GetCellVisibleFormatDef(73, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(73, 4, xls.AddFormat(fmt));
  xls.SetCellValue(73, 4, 'Password');

  fmt := xls.GetCellVisibleFormatDef(73, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(73, 5, xls.AddFormat(fmt));
  xls.SetCellValue(73, 5, 'Pause the execution and automatically continues when the application can SSH to a'
  + ' host.');

  fmt := xls.GetCellVisibleFormatDef(74, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(74, 1, xls.AddFormat(fmt));
  xls.SetCellValue(74, 1, 'WaitForFile');

  fmt := xls.GetCellVisibleFormatDef(74, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(74, 2, xls.AddFormat(fmt));
  xls.SetCellValue(74, 2, 'Path');

  fmt := xls.GetCellVisibleFormatDef(74, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(74, 3, xls.AddFormat(fmt));
  xls.SetCellValue(74, 3, 'Filename');

  fmt := xls.GetCellVisibleFormatDef(74, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(74, 4, xls.AddFormat(fmt));
  xls.SetCellValue(74, 4, 'Timeout seconds (0 = infinit)');

  fmt := xls.GetCellVisibleFormatDef(74, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(74, 5, xls.AddFormat(fmt));
  xls.SetCellValue(74, 5, 'Pause the execution and waits for a file to show up, then continue.');

  fmt := xls.GetCellVisibleFormatDef(75, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(75, 1, xls.AddFormat(fmt));
  xls.SetCellValue(75, 1, 'WaitForPingReply');

  fmt := xls.GetCellVisibleFormatDef(75, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(75, 2, xls.AddFormat(fmt));
  xls.SetCellValue(75, 2, 'IP or DNS name');

  fmt := xls.GetCellVisibleFormatDef(75, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(75, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(75, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(75, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(75, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(75, 5, xls.AddFormat(fmt));
  xls.SetCellValue(75, 5, 'Pause the execution and automatically continues when the ping''ed host sends an echo'
  + ' reply');

  fmt := xls.GetCellVisibleFormatDef(76, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(76, 1, xls.AddFormat(fmt));
  xls.SetCellValue(76, 1, 'WaitForSeconds');

  fmt := xls.GetCellVisibleFormatDef(76, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(76, 2, xls.AddFormat(fmt));
  xls.SetCellValue(76, 2, 'seconds');

  fmt := xls.GetCellVisibleFormatDef(76, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(76, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(76, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Style := [TFlxFontStyles.Italic];
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(76, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(76, 5);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(76, 5, xls.AddFormat(fmt));
  xls.SetCellValue(76, 5, 'Pause the execution for the selected amount of sconds, then continue.');

  fmt := xls.GetCellVisibleFormatDef(78, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(78, 1, xls.AddFormat(fmt));
  xls.SetCellValue(78, 1, 'Global Variables');

  fmt := xls.GetCellVisibleFormatDef(78, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(78, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(78, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(78, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(78, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(78, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(78, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 720;
  fmt.Font.Color := TExcelColor.FromTheme(TThemeColor.Light1);
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Thin;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, -0.49998474074526);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.HAlignment := THFlxAlignment.left;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(78, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(79, 1);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(79, 1, xls.AddFormat(fmt));
  xls.SetCellValue(79, 1, 'These variables are always available during the execution of a script and can be'
  + ' used within a script along with all other variables.');

  fmt := xls.GetCellVisibleFormatDef(79, 2);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(79, 2, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(79, 3);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(79, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(79, 4);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(79, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(79, 5);
  fmt.Font.Name := 'Calibri Light';
  fmt.Font.Size20 := 280;
  fmt.Font.Style := [TFlxFontStyles.Bold];
  fmt.Font.Scheme := TFontScheme.Major;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent1, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  fmt.VAlignment := TVFlxAlignment.center;
  xls.SetCellFormat(79, 5, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(80, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(80, 1, xls.AddFormat(fmt));
  xls.SetCellValue(80, 1, '#ApplicationPath#');

  fmt := xls.GetCellVisibleFormatDef(80, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(80, 2, xls.AddFormat(fmt));
  xls.SetCellValue(80, 2, 'Path to were the ScriptPilot.exe file is started from');

  fmt := xls.GetCellVisibleFormatDef(80, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(80, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(80, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(80, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(81, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(81, 1, xls.AddFormat(fmt));
  xls.SetCellValue(81, 1, '#DataSourceSelected#');

  fmt := xls.GetCellVisibleFormatDef(81, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(81, 2, xls.AddFormat(fmt));
  xls.SetCellValue(81, 2, 'Text in dropdown menu of the current data source selected');

  fmt := xls.GetCellVisibleFormatDef(81, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(81, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(81, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(81, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(82, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(82, 1, xls.AddFormat(fmt));
  xls.SetCellValue(82, 1, '#DataSourceItemsCount#');

  fmt := xls.GetCellVisibleFormatDef(82, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(82, 2, xls.AddFormat(fmt));
  xls.SetCellValue(82, 2, 'Number of entries in the data source dropdown');

  fmt := xls.GetCellVisibleFormatDef(82, 3);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(82, 3, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(82, 4);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(82, 4, xls.AddFormat(fmt));

  fmt := xls.GetCellVisibleFormatDef(83, 1);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  fmt.FillPattern.Pattern := TFlxPatternStyle.Solid;
  fmt.FillPattern.FgColor := TExcelColor.FromTheme(TThemeColor.Accent4, 0.79995117038484);
  fmt.FillPattern.BgColor := TExcelColor.Automatic;
  xls.SetCellFormat(83, 1, xls.AddFormat(fmt));
  xls.SetCellValue(83, 1, '#DataSourceIndex#');

  fmt := xls.GetCellVisibleFormatDef(83, 2);
  fmt.Font.Size20 := 200;
  fmt.Font.Color := TExcelColor.Automatic;
  fmt.Borders.Left.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Left.Color := TExcelColor.Automatic;
  fmt.Borders.Right.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Right.Color := TExcelColor.Automatic;
  fmt.Borders.Top.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Top.Color := TExcelColor.Automatic;
  fmt.Borders.Bottom.Style := TFlxBorderStyle.Dotted;
  fmt.Borders.Bottom.Color := TExcelColor.Automatic;
  xls.SetCellFormat(83, 2, xls.AddFormat(fmt));
  xls.SetCellValue(83, 2, 'The corresponing number to the DataSourceSelected');

  xls.SelectCell(1, 1, false);

  xls.DocumentProperties.SetStandardProperty(TPropertyId.Category, 'Scripts');
  xls.DocumentProperties.SetStandardProperty(TPropertyId.Status, 'So good');
  xls.DocumentProperties.SetStandardProperty(TPropertyId.Author, 'jorlan');


  xls.DocumentProperties.SetStandardProperty(TPropertyId.Comments, 'ScriptPilot Task');
  xls.DocumentProperties.SetStandardProperty(TPropertyId.Subject, 'ScriptPilot Task');


  xls.DocumentProperties.SetStandardProperty(TPropertyId.Company, 'CoreRed 2023 - Jorgen Lanesskog');
end;


end.
